@app.route("/vocab/")
def vocabularies():
    page = (
        int(request.values.get("page")) if request.values.get("page") is not None else 1
    )
    per_page = (
        int(request.values.get("per_page"))
        if request.values.get("per_page") is not None
        else 20
    )
    #
    # # TODO: replace this logic with the following
    # #   1. read all static vocabs from g.VOCABS
    # get this instance's list of vocabs
    vocabs = []  # local copy (to this request) for sorting
    for k, voc in g.VOCABS.items():
        vocabs.append((url_for("object", uri=k), voc.title))
    vocabs.sort(key=lambda tup: tup[1])
    total = len(g.VOCABS.items())
    #
    # # Search
    # query = request.values.get("search")
    # results = []
    # if query:
    #     for m in match(vocabs, query):
    #         results.append(m)
    #     vocabs[:] = results
    #     vocabs.sort(key=lambda v: v.title)
    #     total = len(vocabs)
    #
    # # generate vocabs list for requested page and per_page
    start = (page - 1) * per_page
    end = start + per_page
    vocabs = vocabs[start:end]

    return ContainerRenderer(
        request,
        config.VOCS_URI if config.VOCS_URI is not None else url_for("vocabularies"),
        config.VOCS_TITLE if config.VOCS_TITLE is not None else 'Vocabularies',
        config.VOCS_DESC if config.VOCS_DESC is not None else None,
        None,
        None,
        vocabs,
        total
    ).render()